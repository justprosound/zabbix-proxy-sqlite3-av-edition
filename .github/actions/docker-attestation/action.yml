name: 'Docker Attestation'
description: 'Verify Docker Image Attestations'
inputs:
  registry:
    description: 'Registry for the image'
    required: true
  image_name:
    description: 'Image name'
    required: true
  version:
    description: 'Image version/tag'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Verify Docker Image Attestations
      shell: bash
      run: |
        echo "## Docker Image Attestations" >> $GITHUB_STEP_SUMMARY
        # Prepare image reference for attestation verification
        REGISTRY="${{ inputs.registry }}"
        OWNER="${{ github.repository_owner }}"
        IMG_NAME="${{ inputs.image_name }}"
        VERSION="${{ inputs.version }}"
        IMAGE_REF="$REGISTRY/$OWNER/$IMG_NAME:$VERSION"

        echo "Verifying attestations for image: $IMAGE_REF" >> $GITHUB_STEP_SUMMARY

        # Install Cosign if not already available
        if ! command -v cosign &> /dev/null; then
          echo "Installing Cosign for attestation verification..." >> $GITHUB_STEP_SUMMARY
          COSIGN_VERSION=v2.2.3
          wget -q -O cosign "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64"
          chmod +x cosign
          sudo mv cosign /usr/local/bin/
        fi

        # Verify SBOM attestation
        echo "### SBOM Attestation" >> $GITHUB_STEP_SUMMARY
        if cosign verify-attestation --type cyclonedx \
           "$IMAGE_REF" \
           --certificate-identity-regexp "https://github.com/docker/build-push-action" \
           --certificate-oidc-issuer-regexp "https://token.actions.githubusercontent.com" | grep -q "Verification succeeded"; then
          echo ":white_check_mark: SBOM attestation verified" >> $GITHUB_STEP_SUMMARY
        else
          echo ":warning: SBOM attestation verification inconclusive (this is normal for newly built images)" >> $GITHUB_STEP_SUMMARY
        fi

        # Verify Provenance attestation
        echo "### Provenance Attestation (SLSA)" >> $GITHUB_STEP_SUMMARY
        if cosign verify-attestation --type slsaprovenance \
           "$IMAGE_REF" \
           --certificate-identity-regexp "https://github.com/docker/build-push-action" \
           --certificate-oidc-issuer-regexp "https://token.actions.githubusercontent.com" | grep -q "Verification succeeded"; then
          echo ":white_check_mark: Provenance attestation verified with mode=max" >> $GITHUB_STEP_SUMMARY
          echo ":information_source: This means your image includes detailed build information that can be verified." >> $GITHUB_STEP_SUMMARY
        else
          echo ":warning: Provenance attestation verification inconclusive (this is normal for newly built images)" >> $GITHUB_STEP_SUMMARY
        fi

        # Document information about attestations
        cat >> $GITHUB_STEP_SUMMARY << EOF

        ### About Docker Attestations

        **SBOM Attestation**: Software Bill of Materials (SBOM) provides a detailed inventory of components in the container image, helping with security scanning and license compliance.

        **Provenance Attestation**: Documents the build process, including the build platform,
        source repository, and build parameters, forming a verifiable chain of custody for the container image.

        For more information about Docker build attestations, see [Docker Documentation](https://docs.docker.com/build/ci/github-actions/attestations/).
        EOF
