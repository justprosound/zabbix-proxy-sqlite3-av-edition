name: 'Build and Push Docker Image'
description: 'Builds and pushes Docker image with appropriate tags and metadata'
inputs:
  registry:
    description: 'Container registry to use'
    required: true
  owner:
    description: 'Repository owner'
    required: true
  image_name:
    description: 'Image name'
    required: true
  local_version:
    description: 'Local version with patch increment if needed'
    required: true
  zabbix_version:
    description: 'Upstream Zabbix version'
    required: true
  major_minor:
    description: 'Major.minor version series'
    required: true
  is_local_change:
    description: 'Whether this build includes local changes'
    required: true
  is_lts:
    description: 'Whether this is an LTS version'
    required: false
    default: 'false'
  should_tag_latest:
    description: 'Whether this version should receive the latest tag'
    required: false
    default: 'false'
  build_date:
    description: 'Build timestamp in ISO-8601 format'
    required: true
outputs:
  full_image:
    description: 'Full image reference including tag'
    value: ${{ steps.set_outputs.outputs.full_image }}
  tag_set:
    description: 'Set of tags applied to the image'
    value: ${{ steps.set_outputs.outputs.tag_set }}

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=moby/buildkit:latest

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.owner }}
        password: ${{ github.token }}

    - name: Build and push images
      id: build_push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        provenance: mode=max  # Security: Enable max-level provenance attestation
        sbom: true           # Security: Generate SBOM
        platforms: linux/amd64
        outputs: type=image
        file: ./Dockerfile
        secrets: |
          "github_token=${{ github.token }}"
        build-args: |
          ZABBIX_VERSION=ubuntu-${{ inputs.zabbix_version }}
          BUILD_DATE=${{ inputs.build_date }}
          VCS_REF=${{ github.sha }}
        # Tags based on version information and status
        # - Local version (which may include .N suffix for local changes)
        # - Major.minor version (only for highest patch version in each series)
        # - Original Zabbix version (if not a local change)
        # - LTS tag if applicable
        # - Latest tag if applicable (only for the absolute highest version)
        tags: |
          ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.image_name }}:${{ inputs.local_version }}
          ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.image_name }}:${{ inputs.major_minor }}
          ${{ inputs.is_local_change == 'false' && format('{0}/{1}/{2}:{3}', inputs.registry, inputs.owner, inputs.image_name, inputs.zabbix_version) || '' }}
          ${{ inputs.is_lts == 'true' && format('{0}/{1}/{2}:lts', inputs.registry, inputs.owner, inputs.image_name) || '' }}
          ${{ inputs.should_tag_latest == 'true' && format('{0}/{1}/{2}:latest', inputs.registry, inputs.owner, inputs.image_name) || '' }}
        # Image metadata labels
        labels: |
          org.opencontainers.image.title=Zabbix Proxy SQLite3 for AV Systems
          org.opencontainers.image.description=Zabbix Proxy SQLite3 for AV Systems
          org.opencontainers.image.version=${{ inputs.zabbix_version }}
          org.opencontainers.image.base.name=zabbix/zabbix-proxy-sqlite3
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.created=${{ inputs.build_date }}
          org.opencontainers.image.authors=${{ inputs.owner }}
          org.opencontainers.image.vendor=${{ inputs.owner }}
          org.opencontainers.image.licenses=AGPL-3.0
          org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/blob/main/README.md
          org.zabbix.upstream.version=${{ inputs.zabbix_version }}
          org.zabbix.local.version=${{ inputs.local_version }}
          org.zabbix.build.date=${{ inputs.build_date }}
          org.zabbix.vcs.ref=${{ github.sha }}
          org.zabbix.container.immutable=true

    - name: Set outputs
      id: set_outputs
      shell: bash
      run: |
        FULL_IMAGE="${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.image_name }}:${{ inputs.local_version }}"
        echo "full_image=$FULL_IMAGE" >> $GITHUB_OUTPUT

        # Compile tag set
        TAG_SET="${{ inputs.local_version }},${{ inputs.major_minor }}"

        if [ "${{ inputs.is_local_change }}" = "false" ]; then
          TAG_SET="$TAG_SET,${{ inputs.zabbix_version }}"
        fi

        if [ "${{ inputs.is_lts }}" = "true" ]; then
          TAG_SET="$TAG_SET,lts"
        fi

        if [ "${{ inputs.should_tag_latest }}" = "true" ]; then
          TAG_SET="$TAG_SET,latest"
        fi

        echo "tag_set=$TAG_SET" >> $GITHUB_OUTPUT

    - name: Record build status
      shell: bash
      run: |
        echo "## 🏗️ Build Status" >> $GITHUB_STEP_SUMMARY
        echo "| ✅ Status | Build completed successfully |" >> $GITHUB_STEP_SUMMARY
        echo "| 🏷️ Image Tag | ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.image_name }}:${{ inputs.local_version }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 📋 Zabbix Version | ${{ inputs.zabbix_version }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🏷️ Applied Tags | ${{ steps.set_outputs.outputs.tag_set }} |" >> $GITHUB_STEP_SUMMARY
