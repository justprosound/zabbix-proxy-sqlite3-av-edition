name: â—† reusable | Cleanup on Failure

on:
  workflow_call:
    inputs:
      release_id:
        required: true
        type: string
        description: "The ID of the created release"
      release_tag:
        required: true
        type: string
        description: "The tag name of the created release"

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Delete release on build failure
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const releaseId = '${{ inputs.release_id }}';
            if (releaseId) {
              console.log(`Deleting release ID ${releaseId} due to build failure`);
              try {
                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: parseInt(releaseId)
                });
                console.log(`Successfully deleted release ID ${releaseId}`);
              } catch (error) {
                console.error(`Failed to delete release: ${error.message}`);
              }
            }

            const tagName = '${{ inputs.release_tag }}';
            if (tagName) {
              console.log(`Deleting tag ${tagName} due to build failure`);
              try {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${tagName}`
                });
                console.log(`Successfully deleted tag ${tagName}`);
              } catch (error) {
                console.error(`Failed to delete tag: ${error.message}`);
              }
            }
